#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.4 on Sat Nov 16 18:39:34 2013

import wx
from numpy import *
import os
from random import choice
# begin wxGlade: extracode
# end wxGlade


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.label_1 = wx.StaticText(self, -1, "Longitud de clave")
        self.panel_1 = wx.Panel(self, -1)
        self.label_2_copy = wx.StaticText(self, -1, "NÃºmero de claves")
        self.lclave = wx.TextCtrl(self, -1, "")
        self.panel_2 = wx.Panel(self, -1)
        self.nclaves = wx.TextCtrl(self, -1, "")
        self.panel_3 = wx.Panel(self, -1)
        self.panel_5 = wx.Panel(self, -1)
        self.panel_4 = wx.Panel(self, -1)
        self.button_1 = wx.Button(self, -1, "Calcular")
        self.label_2 = wx.StaticText(self, -1, "Estado del proceso:")
        self.salida = wx.TextCtrl(self, -1, "Esperando...")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.OnClick, self.button_1)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("Generador aleatorio")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.FlexGridSizer(4, 3, 2, 2)
        grid_sizer_1.Add(self.label_1, 0, 0, 0)
        grid_sizer_1.Add(self.panel_1, 1, 0, 0)
        grid_sizer_1.Add(self.label_2_copy, 0, 0, 0)
        grid_sizer_1.Add(self.lclave, 0, 0, 0)
        grid_sizer_1.Add(self.panel_2, 1, 0, 0)
        grid_sizer_1.Add(self.nclaves, 0, 0, 0)
        grid_sizer_1.Add(self.panel_3, 1, 0, 0)
        grid_sizer_1.Add(self.panel_5, 1, 0, 0)
        grid_sizer_1.Add(self.panel_4, 1, 0, 0)
        grid_sizer_1.Add(self.button_1, 0, 0, 0)
        grid_sizer_1.Add(self.label_2, 0, 0, 0)
        grid_sizer_1.Add(self.salida, 0, 0, 0)
        sizer_1.Add(grid_sizer_1, 1, wx.ALL | wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade

    def OnClick(self, event):  # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnClick' not implemented!"
        nclaves_1 = int(self.nclaves.GetValue())
        lclave_1 = int(self.lclave.GetValue())
        valores = u"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@#%&"
        p = u""
        
        f = open('Claves_generadas','a')
        for x in range(nclaves_1):
		
			data = p.join([choice(valores) for i in range(lclave_1)])
			data
				
			print (data+u"\n")
		
			
			f.write(data+"\n")
	f.close()		
	m = "Listo"
	print (m)
	self.salida.SetValue(m)
               
        #event.Skip()

# end of class MyFrame
if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = MyFrame(None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()
